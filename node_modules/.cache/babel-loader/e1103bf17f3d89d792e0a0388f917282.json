{"ast":null,"code":"var _jsxFileName = \"D:\\\\shubham\\\\Academic\\\\2 SY\\\\Summer_break\\\\React\\\\scrimba\\\\tenziesgame\\\\src\\\\Game\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./game.css\";\nimport Die from \"./Components/Die\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  function generateDice() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  } // State to store the array of dice values\n\n\n  const [dice, setDice] = React.useState(allNewDie()); // Function called when we click the RollButton\n\n  function rollDice() {\n    setDice(prevDice => prevDice.map(die => {\n      return;\n    }));\n  } // allNewDie() to create the array with 10 random values\n\n\n  function allNewDie() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateDice());\n    }\n\n    return newDice;\n  }\n\n  function holdDice(id) {\n    setDice(prevDice => dice.map(die => {\n      return die.id === id ? { ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n  } // array of <Die /> elements\n\n\n  const DiceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    handler: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: DiceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rollDice,\n      className: \"roll-dice--button\",\n      children: \"Roll Dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"1JOKgdGH2rHPJ0wKfFHcssF6710=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","Die","nanoid","Game","generateDice","value","Math","ceil","random","isHeld","id","dice","setDice","useState","allNewDie","rollDice","prevDice","map","die","newDice","i","push","holdDice","DiceElements"],"sources":["D:/shubham/Academic/2 SY/Summer_break/React/scrimba/tenziesgame/src/Game/Game.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./game.css\";\r\nimport Die from \"./Components/Die\";\r\nimport { nanoid } from \"nanoid\";\r\nconst Game = () => {\r\n\r\n    function generateDice() {\r\n        return {\r\n                \r\n        value: Math.ceil(Math.random() * 6),\r\n        isHeld: false,\r\n        id: nanoid(),\r\n      \r\n        }\r\n    }\r\n\r\n  // State to store the array of dice values\r\n  const [dice, setDice] = React.useState(allNewDie());\r\n  // Function called when we click the RollButton\r\n  function rollDice() {\r\n      setDice(prevDice => prevDice.map(die => {\r\n        return \r\n    }));\r\n  }\r\n  // allNewDie() to create the array with 10 random values\r\n  function allNewDie() {\r\n    const newDice = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      newDice.push(generateDice());\r\n    }\r\n\r\n    return newDice;\r\n  }\r\n\r\n  function holdDice(id) {\r\n      setDice(prevDice => dice.map(die => {\r\n          return die.id === id ?\r\n              { ...die, isHeld: !die.isHeld } :\r\n              die\r\n    }))\r\n  }\r\n  // array of <Die /> elements\r\n  const DiceElements = dice.map((die) => (\r\n      <Die\r\n          key={die.id}\r\n          value={die.value}\r\n          isHeld={die.isHeld}\r\n          handler={() => holdDice(die.id)}\r\n      />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"dice-container\">{DiceElements}</div>\r\n      {/* Dice Button */}\r\n      <button onClick={rollDice} className=\"roll-dice--button\">\r\n        Roll Dice\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AACA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEf,SAASC,YAAT,GAAwB;IACpB,OAAO;MAEPC,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CAFA;MAGPC,MAAM,EAAE,KAHD;MAIPC,EAAE,EAAER,MAAM;IAJH,CAAP;EAOH,CAVc,CAYjB;;;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACa,QAAN,CAAeC,SAAS,EAAxB,CAAxB,CAbiB,CAcjB;;EACA,SAASC,QAAT,GAAoB;IAChBH,OAAO,CAACI,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAaC,GAAG,IAAI;MACtC;IACH,CAFqB,CAAb,CAAP;EAGH,CAnBgB,CAoBjB;;;EACA,SAASJ,SAAT,GAAqB;IACnB,MAAMK,OAAO,GAAG,EAAhB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MAC3BD,OAAO,CAACE,IAAR,CAAajB,YAAY,EAAzB;IACD;;IAED,OAAOe,OAAP;EACD;;EAED,SAASG,QAAT,CAAkBZ,EAAlB,EAAsB;IAClBE,OAAO,CAACI,QAAQ,IAAIL,IAAI,CAACM,GAAL,CAASC,GAAG,IAAI;MAChC,OAAOA,GAAG,CAACR,EAAJ,KAAWA,EAAX,GACH,EAAE,GAAGQ,GAAL;QAAUT,MAAM,EAAE,CAACS,GAAG,CAACT;MAAvB,CADG,GAEHS,GAFJ;IAGL,CAJqB,CAAb,CAAP;EAKH,CApCgB,CAqCjB;;;EACA,MAAMK,YAAY,GAAGZ,IAAI,CAACM,GAAL,CAAUC,GAAD,iBAC1B,QAAC,GAAD;IAEI,KAAK,EAAEA,GAAG,CAACb,KAFf;IAGI,MAAM,EAAEa,GAAG,CAACT,MAHhB;IAII,OAAO,EAAE,MAAMa,QAAQ,CAACJ,GAAG,CAACR,EAAL;EAJ3B,GACSQ,GAAG,CAACR,EADb;IAAA;IAAA;IAAA;EAAA,QADiB,CAArB;EASA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAK,SAAS,EAAC,gBAAf;MAAA,UAAiCa;IAAjC;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAQ,OAAO,EAAER,QAAjB;MAA2B,SAAS,EAAC,mBAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAxDD;;GAAMZ,I;;KAAAA,I;AA0DN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}