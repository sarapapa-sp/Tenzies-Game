{"ast":null,"code":"import _objectSpread from\"D:/shubham/Academic/2 SY/Summer_break/React/scrimba/tenziesgame/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/shubham/Academic/2 SY/Summer_break/React/scrimba/tenziesgame/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import\"./game.css\";import Die from\"./Components/Die\";import{nanoid}from\"nanoid\";import Title from\"./Components/Title\";import Confetti from\"react-confetti\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Game=function Game(){function generateDice(){return{value:Math.ceil(Math.random()*6),isHeld:false,id:nanoid()};}// State to store the array of dice values\nvar _React$useState=React.useState(allNewDie()),_React$useState2=_slicedToArray(_React$useState,2),dice=_React$useState2[0],setDice=_React$useState2[1];//State to check whether the user won or not\nvar _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),tenzie=_React$useState4[0],setTenzie=_React$useState4[1];// Function called when we click the RollButton\nfunction rollDice(){if(!tenzie){setDice(function(prevDice){return prevDice.map(function(die){return die.isHeld?die:generateDice();});});}else{setTenzie(false);setDice(allNewDie());}}// Using useEffect() to keep the two states in sycs\nReact.useEffect(function(){var allHeld=dice.every(function(die){return die.isHeld;});var firstValue=dice[0].value;var valuesSame=dice.every(function(die){return die.value===firstValue;});if(allHeld&&valuesSame){console.log(\"You Won\");setTenzie(true);}},[dice]);// allNewDie() to create the array with 10 random values\nfunction allNewDie(){var newDice=[];for(var i=0;i<10;i++){newDice.push(generateDice());}return newDice;}function holdDice(id){setDice(function(prevDice){return dice.map(function(die){return die.id===id?_objectSpread(_objectSpread({},die),{},{isHeld:!die.isHeld}):die;});});}// array of <Die /> elements\nvar DiceElements=dice.map(function(die){return/*#__PURE__*/_jsx(Die,{value:die.value,isHeld:die.isHeld,handler:function handler(){return holdDice(die.id);}},die.id);});return/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[tenzie&&/*#__PURE__*/_jsx(Confetti,{}),/*#__PURE__*/_jsx(Title,{}),/*#__PURE__*/_jsx(\"div\",{className:\"dice-container\",children:DiceElements}),/*#__PURE__*/_jsx(\"button\",{onClick:rollDice,className:\"roll-dice--button\",children:tenzie?\"Start Game\":\"Roll Dice\"})]});};export default Game;","map":{"version":3,"names":["React","Die","nanoid","Title","Confetti","Game","generateDice","value","Math","ceil","random","isHeld","id","useState","allNewDie","dice","setDice","tenzie","setTenzie","rollDice","prevDice","map","die","useEffect","allHeld","every","firstValue","valuesSame","console","log","newDice","i","push","holdDice","DiceElements"],"sources":["D:/shubham/Academic/2 SY/Summer_break/React/scrimba/tenziesgame/src/Game/Game.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./game.css\";\r\nimport Die from \"./Components/Die\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Title from \"./Components/Title\";\r\nimport Confetti from \"react-confetti\" \r\n\r\nconst Game = () => {\r\n\r\n    function generateDice() {\r\n        return {\r\n                \r\n        value: Math.ceil(Math.random() * 6),\r\n        isHeld: false,\r\n        id: nanoid(),\r\n      \r\n        }\r\n    }\r\n\r\n  // State to store the array of dice values\r\n    const [dice, setDice] = React.useState(allNewDie());\r\n    //State to check whether the user won or not\r\n    const [tenzie,setTenzie] = React.useState(false)\r\n  // Function called when we click the RollButton\r\n    function rollDice() {\r\n        if (!tenzie) {\r\n            setDice(prevDice => prevDice.map(die => {\r\n          return die.isHeld ?\r\n              die :\r\n              generateDice()\r\n            }\r\n            )\r\n            )\r\n        } else {\r\n            setTenzie(false)\r\n            setDice(allNewDie())\r\n      }\r\n    \r\n    }\r\n    // Using useEffect() to keep the two states in sycs\r\n    React.useEffect(() => {\r\n        const allHeld = dice.every(die => die.isHeld)\r\n        const firstValue = dice[0].value\r\n        const valuesSame = dice.every(die => die.value === firstValue)\r\n\r\n        if (allHeld && valuesSame) {\r\n            console.log(\"You Won\")\r\n            setTenzie(true)\r\n        }\r\n    },[dice])\r\n\r\n  // allNewDie() to create the array with 10 random values\r\n  function allNewDie() {\r\n    const newDice = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      newDice.push(generateDice());\r\n    }\r\n\r\n    return newDice;\r\n  }\r\n\r\n  function holdDice(id) {\r\n      setDice(prevDice => dice.map(die => {\r\n          return die.id === id ?\r\n              { ...die, isHeld: !die.isHeld } :\r\n              die\r\n    }))\r\n  }\r\n  // array of <Die /> elements\r\n  const DiceElements = dice.map((die) => (\r\n      <Die\r\n          key={die.id}\r\n          value={die.value}\r\n          isHeld={die.isHeld}\r\n          handler={() => holdDice(die.id)}\r\n      />\r\n  ));\r\n\r\n  return (\r\n      <div className=\"game\">\r\n          {tenzie && <Confetti />}\r\n          <Title />\r\n      <div className=\"dice-container\">{DiceElements}</div>\r\n      {/* Dice Button */}\r\n      <button onClick={rollDice} className=\"roll-dice--button\">\r\n        {tenzie ? \"Start Game\" : \"Roll Dice\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}